#!/usr/bin/env bash

a=(10 20 30 40 50); #一对括号表示是数组，数组元素用“空格”符号分割开。
echo "array length: ${#a[@]}"   #用${#数组名[@或*]} 可以得到数组长度

echo "a[2] is ${a[2]}"      #用${数组名[下标]} 下标是从0开始
echo "a is ${a[*]}"         #下标是：*或者@ 得到整个数组内容
echo "a is ${a[@]}"         #下标是：*或者@ 得到整个数组内容

a[5]=100;               #直接通过 数组名[下标] 就可以对其进行引用赋值，如果下标不存在，自动添加新一个数组元素
echo "new a is ${a[*]}"

b=(11 22 33 44 55 66 77 88 99);
unset b[2]              #直接通过：unset 数组[下标] 可以清除相应的元素，
echo "b is ${b[*]}"
unset b;                #不带下标，清除整个数据。
echo "b is ${b[*]}"

c=('a' 'b' 'c' 'd' 'e' 'f');
c1=${c[@]:0:3};         #直接通过 ${数组名[@或*]:起始位置:长度} 切片原先数组返回是"字符串"
echo "c1=${c1}";
c2=(${c[@]:0:4});       #因此如果加上”()”，将得到切片数组
echo "c2=${c2[*]}";

d=('abc' 'abd' 'abe' 'abf' 'abg');
d1=(${d[@]/a/A});       #${数组名[@或*]/查找字符/替换字符} 该操作不会改变原先数组内容
echo "d1=${d1[@]}";